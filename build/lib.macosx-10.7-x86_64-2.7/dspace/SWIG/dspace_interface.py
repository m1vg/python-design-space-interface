# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.0
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError('Python 2.7 or later required')

# Import the low-level C/C++ module
if __package__ or '.' in __name__:
    from . import _dspace_interface
else:
    import _dspace_interface

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if name == "thisown":
        return self.this.own(value)
    if name == "this":
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if not static:
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if name == "thisown":
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def DSDesignSpaceToolboxVersionString():
    return _dspace_interface.DSDesignSpaceToolboxVersionString()
M_DS_NOFILE = _dspace_interface.M_DS_NOFILE
M_DS_NULL = _dspace_interface.M_DS_NULL
M_DS_NOFORMAT = _dspace_interface.M_DS_NOFORMAT
M_DS_WRONG = _dspace_interface.M_DS_WRONG
M_DS_EXISTS = _dspace_interface.M_DS_EXISTS
M_DS_NOTHREAD = _dspace_interface.M_DS_NOTHREAD
M_DS_MALLOC = _dspace_interface.M_DS_MALLOC
M_DS_NOT_IMPL = _dspace_interface.M_DS_NOT_IMPL
M_DS_PARSE = _dspace_interface.M_DS_PARSE
A_DS_NOERROR = _dspace_interface.A_DS_NOERROR
A_DS_WARN = _dspace_interface.A_DS_WARN
A_DS_ERROR = _dspace_interface.A_DS_ERROR
A_DS_FATAL = _dspace_interface.A_DS_FATAL
A_DS_KILLNOW = _dspace_interface.A_DS_KILLNOW

def DSErrorFunction(M_DS_Message, A_DS_ACTION, FILEN, LINE, FUNC):
    return _dspace_interface.DSErrorFunction(M_DS_Message, A_DS_ACTION, FILEN, LINE, FUNC)
DS_CASE_JSON_NO_SSYSTEM = _dspace_interface.DS_CASE_JSON_NO_SSYSTEM
DS_CASE_JSON_NO_CASE_SIGNATURE = _dspace_interface.DS_CASE_JSON_NO_CASE_SIGNATURE
DS_CASE_JSON_NO_CONDITIONS = _dspace_interface.DS_CASE_JSON_NO_CONDITIONS
DS_SSYSTEM_JSON_NO_SOLUTION = _dspace_interface.DS_SSYSTEM_JSON_NO_SOLUTION
DS_SSYSTEM_JSON_NO_SINGULAR = _dspace_interface.DS_SSYSTEM_JSON_NO_SINGULAR

def DSIOSetErrorFile(aFile):
    return _dspace_interface.DSIOSetErrorFile(aFile)

def DSIOSetPrintFunction(printFunction):
    return _dspace_interface.DSIOSetPrintFunction(printFunction)

def DSIOSetPostWarningFunction(warningFunction):
    return _dspace_interface.DSIOSetPostWarningFunction(warningFunction)

def DSIOSetPostErrorFunction(errorFunction):
    return _dspace_interface.DSIOSetPostErrorFunction(errorFunction)

def DSIOSetPostFatalErrorFunction(fatalErrorFunction):
    return _dspace_interface.DSIOSetPostFatalErrorFunction(fatalErrorFunction)

def DSIOSetCaseJSONOptions(options):
    return _dspace_interface.DSIOSetCaseJSONOptions(options)

def DSIOSetSSystemJSONOptions(options):
    return _dspace_interface.DSIOSetSSystemJSONOptions(options)

def DSVariablePoolStringInJSONFormat(pool):
    return _dspace_interface.DSVariablePoolStringInJSONFormat(pool)

def DSMatrixStringInJSONFormat(matrix):
    return _dspace_interface.DSMatrixStringInJSONFormat(matrix)

def DSMatrixArrayStringInJSONFormat(array):
    return _dspace_interface.DSMatrixArrayStringInJSONFormat(array)

def DSSSystemStringInJSONFormat(ssys):
    return _dspace_interface.DSSSystemStringInJSONFormat(ssys)

def DSCaseStringInJSONFormat(aCase):
    return _dspace_interface.DSCaseStringInJSONFormat(aCase)

def DSIOReadBinaryData(fileName, length):
    return _dspace_interface.DSIOReadBinaryData(fileName, length)

def DSIOWriteBinaryData(fileName, length, binaryData):
    return _dspace_interface.DSIOWriteBinaryData(fileName, length, binaryData)

def DSSecureMalloc(size):
    return _dspace_interface.DSSecureMalloc(size)

def DSSecureCalloc(count, size):
    return _dspace_interface.DSSecureCalloc(count, size)

def DSSecureRealloc(ptr, size):
    return _dspace_interface.DSSecureRealloc(ptr, size)

def DSSecureFree(ptr):
    return _dspace_interface.DSSecureFree(ptr)
M_DS_VAR_NULL = _dspace_interface.M_DS_VAR_NULL
M_DS_VAR_LOCKED = _dspace_interface.M_DS_VAR_LOCKED

def DSVariableAlloc(name):
    return _dspace_interface.DSVariableAlloc(name)

def DSVariableFree(var):
    return _dspace_interface.DSVariableFree(var)

def DSVariableRetain(aVariable):
    return _dspace_interface.DSVariableRetain(aVariable)

def DSVariableRelease(aVariable):
    return _dspace_interface.DSVariableRelease(aVariable)

def DSVariablePoolAlloc():
    return _dspace_interface.DSVariablePoolAlloc()

def DSVariablePoolCopy(pool):
    return _dspace_interface.DSVariablePoolCopy(pool)

def DSVariablePoolFree(pool):
    return _dspace_interface.DSVariablePoolFree(pool)

def DSVariablePoolByParsingString(string):
    return _dspace_interface.DSVariablePoolByParsingString(string)

def DSVariablePoolSetReadOnly(pool):
    return _dspace_interface.DSVariablePoolSetReadOnly(pool)

def DSVariablePoolSetReadWrite(pool):
    return _dspace_interface.DSVariablePoolSetReadWrite(pool)

def DSVariablePoolSetReadWriteAdd(pool):
    return _dspace_interface.DSVariablePoolSetReadWriteAdd(pool)

def DSVariablePoolAddVariableWithName(pool, name):
    return _dspace_interface.DSVariablePoolAddVariableWithName(pool, name)

def DSVariablePoolAddVariable(pool, newVar):
    return _dspace_interface.DSVariablePoolAddVariable(pool, newVar)

def DSVariablePoolCopyVariablesFromVariablePool(to_add, source):
    return _dspace_interface.DSVariablePoolCopyVariablesFromVariablePool(to_add, source)

def DSVariablePoolSetValueForVariableWithName(pool, name, value):
    return _dspace_interface.DSVariablePoolSetValueForVariableWithName(pool, name, value)

def DSVariablePoolNumberOfVariables(pool):
    return _dspace_interface.DSVariablePoolNumberOfVariables(pool)

def DSVariablePoolIsReadOnly(pool):
    return _dspace_interface.DSVariablePoolIsReadOnly(pool)

def DSVariablePoolIsReadWrite(pool):
    return _dspace_interface.DSVariablePoolIsReadWrite(pool)

def DSVariablePoolIsReadWriteAdd(pool):
    return _dspace_interface.DSVariablePoolIsReadWriteAdd(pool)

def DSVariablePoolHasVariableWithName(pool, name):
    return _dspace_interface.DSVariablePoolHasVariableWithName(pool, name)

def DSVariablePoolVariableWithName(pool, name):
    return _dspace_interface.DSVariablePoolVariableWithName(pool, name)

def DSVariablePoolVariableAtIndex(pool, index):
    return _dspace_interface.DSVariablePoolVariableAtIndex(pool, index)

def DSVariablePoolValueForVariableWithName(pool, name):
    return _dspace_interface.DSVariablePoolValueForVariableWithName(pool, name)

def DSVariablePoolAllVariables(pool):
    return _dspace_interface.DSVariablePoolAllVariables(pool)

def DSVariablePoolAllVariableNames(pool):
    return _dspace_interface.DSVariablePoolAllVariableNames(pool)

def DSVariablePoolIndexOfVariable(pool, var):
    return _dspace_interface.DSVariablePoolIndexOfVariable(pool, var)

def DSVariablePoolIndexOfVariableWithName(pool, name):
    return _dspace_interface.DSVariablePoolIndexOfVariableWithName(pool, name)

def DSVariablePoolPrint(pool):
    return _dspace_interface.DSVariablePoolPrint(pool)

def DSVariablePoolValuesAsVector(pool, rowVector):
    return _dspace_interface.DSVariablePoolValuesAsVector(pool, rowVector)

def DSVariablePoolIndicesOfSubPool(superPool, subPool):
    return _dspace_interface.DSVariablePoolIndicesOfSubPool(superPool, subPool)

def DSVariablePoolDistanceToPool(Pool1, Pool2):
    return _dspace_interface.DSVariablePoolDistanceToPool(Pool1, Pool2)
M_DS_MAT_NULL = _dspace_interface.M_DS_MAT_NULL
M_DS_MAT_OUTOFBOUNDS = _dspace_interface.M_DS_MAT_OUTOFBOUNDS
M_DS_MAT_NOINTERNAL = _dspace_interface.M_DS_MAT_NOINTERNAL

def DSMatrixAlloc(rows, columns):
    return _dspace_interface.DSMatrixAlloc(rows, columns)

def DSMatrixCalloc(rows, columns):
    return _dspace_interface.DSMatrixCalloc(rows, columns)

def DSMatrixCopy(original):
    return _dspace_interface.DSMatrixCopy(original)

def DSMatrixFree(matrix):
    return _dspace_interface.DSMatrixFree(matrix)

def DSuIntegerMatrixCalloc(rows, columns):
    return _dspace_interface.DSuIntegerMatrixCalloc(rows, columns)

def DSuIntegerMatrixSetValue(matrix, row, column, value):
    return _dspace_interface.DSuIntegerMatrixSetValue(matrix, row, column, value)

def DSuIntegerMatrixCopy(original):
    return _dspace_interface.DSuIntegerMatrixCopy(original)

def DSuIntegerMatrixValue(matrix, row, column):
    return _dspace_interface.DSuIntegerMatrixValue(matrix, row, column)

def DSuIntegerMatrixFree(matrix):
    return _dspace_interface.DSuIntegerMatrixFree(matrix)

def DSMatrixIdentity(size):
    return _dspace_interface.DSMatrixIdentity(size)

def DSMatrixRandomNumbers(rows, columns):
    return _dspace_interface.DSMatrixRandomNumbers(rows, columns)

def DSMatrixByParsingString(string):
    return _dspace_interface.DSMatrixByParsingString(string)

def DSMatrixFromStringVector(string, rows, columns):
    return _dspace_interface.DSMatrixFromStringVector(string, rows, columns)

def DSMatrixBySubstractingMatrix(lvalue, rvalue):
    return _dspace_interface.DSMatrixBySubstractingMatrix(lvalue, rvalue)

def DSMatrixByAddingMatrix(lvalue, rvalue):
    return _dspace_interface.DSMatrixByAddingMatrix(lvalue, rvalue)

def DSMatrixByDividingMatrix(lvalue, rvalue):
    return _dspace_interface.DSMatrixByDividingMatrix(lvalue, rvalue)

def DSMatrixByMultiplyingMatrix(lvalue, rvalue):
    return _dspace_interface.DSMatrixByMultiplyingMatrix(lvalue, rvalue)

def DSMatrixByApplyingFunction(mvalue, function):
    return _dspace_interface.DSMatrixByApplyingFunction(mvalue, function)

def DSMatrixBySubstractingScalar(lvalue, rvalue):
    return _dspace_interface.DSMatrixBySubstractingScalar(lvalue, rvalue)

def DSMatrixByAddingScalar(lvalue, rvalue):
    return _dspace_interface.DSMatrixByAddingScalar(lvalue, rvalue)

def DSMatrixByDividingScalar(lvalue, rvalue):
    return _dspace_interface.DSMatrixByDividingScalar(lvalue, rvalue)

def DSMatrixByMultiplyingScalar(lvalue, rvalue):
    return _dspace_interface.DSMatrixByMultiplyingScalar(lvalue, rvalue)

def DSMatrixDoubleValue(matrix, row, column):
    return _dspace_interface.DSMatrixDoubleValue(matrix, row, column)

def DSMatrixSetDoubleValue(matrix, row, column, value):
    return _dspace_interface.DSMatrixSetDoubleValue(matrix, row, column, value)

def DSMatrixSetDoubleValueAll(matrix, value):
    return _dspace_interface.DSMatrixSetDoubleValueAll(matrix, value)

def DSMatrixSetDoubleValuesList(*args):
    return _dspace_interface.DSMatrixSetDoubleValuesList(*args)

def DSMatrixSetDoubleValues(matrix, byColumns, numberOfValues, values):
    return _dspace_interface.DSMatrixSetDoubleValues(matrix, byColumns, numberOfValues, values)

def DSMatrixFirstNonZeroIndexAtRow(matrix, row):
    return _dspace_interface.DSMatrixFirstNonZeroIndexAtRow(matrix, row)

def DSMatrixRoundToSignificantFigures(matrix, figures):
    return _dspace_interface.DSMatrixRoundToSignificantFigures(matrix, figures)

def DSMatrixSubMatrixExcludingColumnList(*args):
    return _dspace_interface.DSMatrixSubMatrixExcludingColumnList(*args)

def DSMatrixSubMatrixExcludingColumns(matrix, numberOfColumns, columns):
    return _dspace_interface.DSMatrixSubMatrixExcludingColumns(matrix, numberOfColumns, columns)

def DSMatrixSubMatrixExcludingRowList(*args):
    return _dspace_interface.DSMatrixSubMatrixExcludingRowList(*args)

def DSMatrixSubMatrixExcludingRows(matrix, numberOfRows, rows):
    return _dspace_interface.DSMatrixSubMatrixExcludingRows(matrix, numberOfRows, rows)

def DSMatrixSubMatrixIncludingRowList(*args):
    return _dspace_interface.DSMatrixSubMatrixIncludingRowList(*args)

def DSMatrixSubMatrixIncludingRows(matrix, numberOfRows, rows):
    return _dspace_interface.DSMatrixSubMatrixIncludingRows(matrix, numberOfRows, rows)

def DSMatrixSubMatrixIncludingColumnList(*args):
    return _dspace_interface.DSMatrixSubMatrixIncludingColumnList(*args)

def DSMatrixSubMatrixExcludingRowAndColumnList(*args):
    return _dspace_interface.DSMatrixSubMatrixExcludingRowAndColumnList(*args)

def DSMatrixSubMatrixExcludingRowsAndColumns(matrix, numberOfRows, numberOfColumns, rows, columns):
    return _dspace_interface.DSMatrixSubMatrixExcludingRowsAndColumns(matrix, numberOfRows, numberOfColumns, rows, columns)

def DSMatrixSubMatrixIncludingColumns(matrix, numberOfColumns, columns):
    return _dspace_interface.DSMatrixSubMatrixIncludingColumns(matrix, numberOfColumns, columns)

def DSMatrixSubMatrixIncludingRowAndColumnList(*args):
    return _dspace_interface.DSMatrixSubMatrixIncludingRowAndColumnList(*args)

def DSMatrixSubMatrixIncludingRowsAndColumns(matrix, numberOfRows, numberOfColumns, rows, columns):
    return _dspace_interface.DSMatrixSubMatrixIncludingRowsAndColumns(matrix, numberOfRows, numberOfColumns, rows, columns)

def DSMatrixAppendMatrices(firstMatrix, secondMatrix, byColumn):
    return _dspace_interface.DSMatrixAppendMatrices(firstMatrix, secondMatrix, byColumn)

def DSMatrixSwitchRows(matrix, rowA, rowB):
    return _dspace_interface.DSMatrixSwitchRows(matrix, rowA, rowB)

def DSMatrixSwitchColumns(matrix, columnA, columnB):
    return _dspace_interface.DSMatrixSwitchColumns(matrix, columnA, columnB)

def DSMatrixClearRow(matrix, row):
    return _dspace_interface.DSMatrixClearRow(matrix, row)

def DSMatrixClearColumns(matrix, column):
    return _dspace_interface.DSMatrixClearColumns(matrix, column)

def DSMatrixWithUniqueRows(matrix):
    return _dspace_interface.DSMatrixWithUniqueRows(matrix)

def DSMatrixPrint(matrix):
    return _dspace_interface.DSMatrixPrint(matrix)

def DSuIntegerMatrixPrint(matrix):
    return _dspace_interface.DSuIntegerMatrixPrint(matrix)

def DSMatrixIsIdentity(matrix):
    return _dspace_interface.DSMatrixIsIdentity(matrix)

def DSMatrixIsSquare(matrix):
    return _dspace_interface.DSMatrixIsSquare(matrix)

def DSMatrixRank(matrix):
    return _dspace_interface.DSMatrixRank(matrix)

def minimumValue(matrix, shouldExcludeZero):
    return _dspace_interface.minimumValue(matrix, shouldExcludeZero)

def maximumValue(matrix, shouldExcludeZero):
    return _dspace_interface.maximumValue(matrix, shouldExcludeZero)

def maximumValueIndex(matrix, maximumValue):
    return _dspace_interface.maximumValueIndex(matrix, maximumValue)

def DSMatrixDominantEigenvalue(matrix):
    return _dspace_interface.DSMatrixDominantEigenvalue(matrix)

def DSMatrixSubstractByMatrix(addTo, addBy):
    return _dspace_interface.DSMatrixSubstractByMatrix(addTo, addBy)

def DSMatrixAddByMatrix(addTo, addBy):
    return _dspace_interface.DSMatrixAddByMatrix(addTo, addBy)

def DSMatrixApplyFunction(matrix, function):
    return _dspace_interface.DSMatrixApplyFunction(matrix, function)

def DSMatrixMultiplyByScalar(matrix, value):
    return _dspace_interface.DSMatrixMultiplyByScalar(matrix, value)

def DSMatrixAverage(matrix, byRows):
    return _dspace_interface.DSMatrixAverage(matrix, byRows)

def DSMatrixDeterminant(matrix):
    return _dspace_interface.DSMatrixDeterminant(matrix)

def DSMatrixMinor(matrix, row, column):
    return _dspace_interface.DSMatrixMinor(matrix, row, column)

def DSMatrixTranspose(matrix):
    return _dspace_interface.DSMatrixTranspose(matrix)

def DSMatrixInverse(matrix):
    return _dspace_interface.DSMatrixInverse(matrix)

def DSMatrixSVD(matrix):
    return _dspace_interface.DSMatrixSVD(matrix)

def DSMatrixQRD(matrix):
    return _dspace_interface.DSMatrixQRD(matrix)

def DSMatrixRightNullspace(matrix):
    return _dspace_interface.DSMatrixRightNullspace(matrix)

def DSMatrixLeftNullspace(matrix):
    return _dspace_interface.DSMatrixLeftNullspace(matrix)

def DSMatrixIdenticalRows(matrix):
    return _dspace_interface.DSMatrixIdenticalRows(matrix)

def DSMatrixPLUDecomposition(matrix):
    return _dspace_interface.DSMatrixPLUDecomposition(matrix)

def DSMatrixCharacteristicPolynomialCoefficients(matrix):
    return _dspace_interface.DSMatrixCharacteristicPolynomialCoefficients(matrix)

def DSMatrixUndeterminedCoefficientsRnMatrixForSize(matrixSize):
    return _dspace_interface.DSMatrixUndeterminedCoefficientsRnMatrixForSize(matrixSize)

def DSMatrixCharacteristicPolynomialUndeterminedCoefficients(matrix, Rn):
    return _dspace_interface.DSMatrixCharacteristicPolynomialUndeterminedCoefficients(matrix, Rn)

def DSMatrixSwapRows(matrix, rowA, rowB):
    return _dspace_interface.DSMatrixSwapRows(matrix, rowA, rowB)

def DSMatrixSwapRowsBack(matrix, swappingVector):
    return _dspace_interface.DSMatrixSwapRowsBack(matrix, swappingVector)

def DSMatrixGaussElimination(Ad, Ai, B):
    return _dspace_interface.DSMatrixGaussElimination(Ad, Ai, B)

def DSMatrixPseudoInverse(matrix):
    return _dspace_interface.DSMatrixPseudoInverse(matrix)

def DSMatrixDataForGLPK(matrix):
    return _dspace_interface.DSMatrixDataForGLPK(matrix)

def DSMatrixRowsForGLPK(matrix):
    return _dspace_interface.DSMatrixRowsForGLPK(matrix)

def DSMatrixColumnsForGLPK(matrix):
    return _dspace_interface.DSMatrixColumnsForGLPK(matrix)

def DSMatrixToArray(matrix, isDelaunay):
    return _dspace_interface.DSMatrixToArray(matrix, isDelaunay)

def DSMatrixEncode(matrix):
    return _dspace_interface.DSMatrixEncode(matrix)

def DSMatrixFromMatrixMessage(message):
    return _dspace_interface.DSMatrixFromMatrixMessage(message)

def DSMatrixDecode(length, arg2):
    return _dspace_interface.DSMatrixDecode(length, arg2)

def DSuIntegerMatrixEncode(matrix):
    return _dspace_interface.DSuIntegerMatrixEncode(matrix)

def DSuIntegerMatrixFromMatrixMessage(message):
    return _dspace_interface.DSuIntegerMatrixFromMatrixMessage(message)

def DSuIntegerMatrixDecode(length, arg2):
    return _dspace_interface.DSuIntegerMatrixDecode(length, arg2)

def DSMatrixArrayAlloc():
    return _dspace_interface.DSMatrixArrayAlloc()

def DSMatrixArrayCopy(array):
    return _dspace_interface.DSMatrixArrayCopy(array)

def DSMatrixArrayFree(array):
    return _dspace_interface.DSMatrixArrayFree(array)

def DSMatrixArrayNumberOfMatrices(matrixArray):
    return _dspace_interface.DSMatrixArrayNumberOfMatrices(matrixArray)

def DSMatrixArrayMatrix(array, index):
    return _dspace_interface.DSMatrixArrayMatrix(array, index)

def DSMatrixArrayAddMatrix(array, matrixToAdd):
    return _dspace_interface.DSMatrixArrayAddMatrix(array, matrixToAdd)

def DSMatrixArrayDoubleWithIndices(array, i, j, k):
    return _dspace_interface.DSMatrixArrayDoubleWithIndices(array, i, j, k)

def DSMatrixArrayPrint(array):
    return _dspace_interface.DSMatrixArrayPrint(array)

def DSMatrixArrayEncode(matrixArray):
    return _dspace_interface.DSMatrixArrayEncode(matrixArray)

def DSMatrixArrayFromMatrixArrayMessage(message):
    return _dspace_interface.DSMatrixArrayFromMatrixArrayMessage(message)

def DSMatrixArrayDecode(length, buffer):
    return _dspace_interface.DSMatrixArrayDecode(length, buffer)
DS_EXPRESSION_TYPE_UNDEFINED = _dspace_interface.DS_EXPRESSION_TYPE_UNDEFINED
DS_EXPRESSION_TYPE_OPERATOR = _dspace_interface.DS_EXPRESSION_TYPE_OPERATOR
DS_EXPRESSION_TYPE_CONSTANT = _dspace_interface.DS_EXPRESSION_TYPE_CONSTANT
DS_EXPRESSION_TYPE_VARIABLE = _dspace_interface.DS_EXPRESSION_TYPE_VARIABLE
DS_EXPRESSION_TYPE_FUNCTION = _dspace_interface.DS_EXPRESSION_TYPE_FUNCTION
DSExpressionImaginaryNumber = _dspace_interface.DSExpressionImaginaryNumber

def DSExpressionFree(root):
    return _dspace_interface.DSExpressionFree(root)

def DSExpressionCopy(expression):
    return _dspace_interface.DSExpressionCopy(expression)

def DSExpressionByParsingString(string):
    return _dspace_interface.DSExpressionByParsingString(string)

def DSExpressionAddExpressions(lvalue, rvalue):
    return _dspace_interface.DSExpressionAddExpressions(lvalue, rvalue)

def DSExpressionSubstractExpressions(lvalue, rvalue):
    return _dspace_interface.DSExpressionSubstractExpressions(lvalue, rvalue)

def DSExpressionMultiplyExpressionByConstant(expression, constant):
    return _dspace_interface.DSExpressionMultiplyExpressionByConstant(expression, constant)

def DSExpressionByCompressingConstantVariables(expression, assumedConstant):
    return _dspace_interface.DSExpressionByCompressingConstantVariables(expression, assumedConstant)

def DSExpressionIsEqualToExpression(lhs, rhs):
    return _dspace_interface.DSExpressionIsEqualToExpression(lhs, rhs)

def DSStringIsEqualToStringIgnoringOrder(lhs_string, rhs_string):
    return _dspace_interface.DSStringIsEqualToStringIgnoringOrder(lhs_string, rhs_string)

def DSExpressionIsEqualToExpressionIgnoringOrder(lhs, rhs):
    return _dspace_interface.DSExpressionIsEqualToExpressionIgnoringOrder(lhs, rhs)

def DSExpressionByReplacingSubExpression(expression, target, substitute):
    return _dspace_interface.DSExpressionByReplacingSubExpression(expression, target, substitute)

def DSExpressionRecastSystemEquations(expressionArray, numberOfEquations, prefix):
    return _dspace_interface.DSExpressionRecastSystemEquations(expressionArray, numberOfEquations, prefix)

def DSExpressionEvaluateWithVariablePool(expression, pool):
    return _dspace_interface.DSExpressionEvaluateWithVariablePool(expression, pool)

def DSExpressionEvaluateComplexWithVariablePool(expression, pool):
    return _dspace_interface.DSExpressionEvaluateComplexWithVariablePool(expression, pool)

def DSExpressionEquationLHSExpression(expression):
    return _dspace_interface.DSExpressionEquationLHSExpression(expression)

def DSExpressionEquationRHSExpression(expression):
    return _dspace_interface.DSExpressionEquationRHSExpression(expression)

def DSExpressionVariablesInExpression(expression):
    return _dspace_interface.DSExpressionVariablesInExpression(expression)

def DSExpressionAsString(expression):
    return _dspace_interface.DSExpressionAsString(expression)

def DSExpressionBranchAtIndexAsString(expression, index):
    return _dspace_interface.DSExpressionBranchAtIndexAsString(expression, index)

def DSExpressionNumberOfTerms(expression):
    return _dspace_interface.DSExpressionNumberOfTerms(expression)

def DSExpressionAsLatexString(expression, substitutionDict):
    return _dspace_interface.DSExpressionAsLatexString(expression, substitutionDict)

def DSExpressionPrint(expression):
    return _dspace_interface.DSExpressionPrint(expression)

def DSExpressionFromPowerlawInMatrixForm(row, Kd, Xd, Ki, Xi, C):
    return _dspace_interface.DSExpressionFromPowerlawInMatrixForm(row, Kd, Xd, Ki, Xi, C)

def DSExpressionSimplifyExpressionAsString(expression):
    return _dspace_interface.DSExpressionSimplifyExpressionAsString(expression)

def DSExpressionSimplifyExpressionAsExpression(expression):
    return _dspace_interface.DSExpressionSimplifyExpressionAsExpression(expression)

def DSExpressionByParsingStringSimplifyExpressionAsExpression(string):
    return _dspace_interface.DSExpressionByParsingStringSimplifyExpressionAsExpression(string)

def DSExpressionByParsingStringSimplifyExpressionAsString(string):
    return _dspace_interface.DSExpressionByParsingStringSimplifyExpressionAsString(string)

def DSExpressionFromLogPowerlawInMatrixForm(row, Kd, Xd, Ki, Xi, C):
    return _dspace_interface.DSExpressionFromLogPowerlawInMatrixForm(row, Kd, Xd, Ki, Xi, C)
M_DS_GMA_NULL = _dspace_interface.M_DS_GMA_NULL

def DSGMASystemCopy(gma):
    return _dspace_interface.DSGMASystemCopy(gma)

def DSGMASystemFree(gma):
    return _dspace_interface.DSGMASystemFree(gma)

def DSGMASystemByParsingStringList(*args):
    return _dspace_interface.DSGMASystemByParsingStringList(*args)

def DSGMASystemByParsingStrings(strings, Xd_a, numberOfEquations):
    return _dspace_interface.DSGMASystemByParsingStrings(strings, Xd_a, numberOfEquations)

def DSGMASystemByParsingStringsWithXi(strings, Xd_a, Xi, numberOfEquations):
    return _dspace_interface.DSGMASystemByParsingStringsWithXi(strings, Xd_a, Xi, numberOfEquations)

def DSGMASystemNumberOfEquations(gma):
    return _dspace_interface.DSGMASystemNumberOfEquations(gma)

def DSGMASystemEquations(gma):
    return _dspace_interface.DSGMASystemEquations(gma)

def DSGMASystemPositiveTermForEquations(gma, equation, term):
    return _dspace_interface.DSGMASystemPositiveTermForEquations(gma, equation, term)

def DSGMASystemPositiveTermsForEquations(gma, equation):
    return _dspace_interface.DSGMASystemPositiveTermsForEquations(gma, equation)

def DSGMASystemNegativeTermForEquations(gma, equation, term):
    return _dspace_interface.DSGMASystemNegativeTermForEquations(gma, equation, term)

def DSGMASystemNegativeTermsForEquations(gma, equation):
    return _dspace_interface.DSGMASystemNegativeTermsForEquations(gma, equation)

def DSGMASystemAlpha(gma):
    return _dspace_interface.DSGMASystemAlpha(gma)

def DSGMASystemBeta(gma):
    return _dspace_interface.DSGMASystemBeta(gma)

def DSGMASystemGd(gma):
    return _dspace_interface.DSGMASystemGd(gma)

def DSGMASystemGi(gma):
    return _dspace_interface.DSGMASystemGi(gma)

def DSGMASystemHd(gma):
    return _dspace_interface.DSGMASystemHd(gma)

def DSGMASystemHi(gma):
    return _dspace_interface.DSGMASystemHi(gma)

def DSGMASystemXd(gma):
    return _dspace_interface.DSGMASystemXd(gma)

def DSGMASystemXd_a(gma):
    return _dspace_interface.DSGMASystemXd_a(gma)

def DSGMASystemXd_t(gma):
    return _dspace_interface.DSGMASystemXd_t(gma)

def DSGMASystemXi(gma):
    return _dspace_interface.DSGMASystemXi(gma)

def DSGMASystemNumberOfCases(gma):
    return _dspace_interface.DSGMASystemNumberOfCases(gma)

def DSGMASystemSignature(gma):
    return _dspace_interface.DSGMASystemSignature(gma)

def DSGMASystemPrint(gma):
    return _dspace_interface.DSGMASystemPrint(gma)

def DSGMASystemPrintEquations(gma):
    return _dspace_interface.DSGMASystemPrintEquations(gma)

def DSGMASystemTermWithTermNumber(gma, termNumber):
    return _dspace_interface.DSGMASystemTermWithTermNumber(gma, termNumber)

def DSGMASystemNetworkConnectivity(gma):
    return _dspace_interface.DSGMASystemNetworkConnectivity(gma)

def DSGMASystemFluxDictionary(gma):
    return _dspace_interface.DSGMASystemFluxDictionary(gma)

def DSGMASystemPrecursorProductRelationships(gma, precursorEquation, productEquation):
    return _dspace_interface.DSGMASystemPrecursorProductRelationships(gma, precursorEquation, productEquation)

def DSGMASystemEquivalentFluxes(gma):
    return _dspace_interface.DSGMASystemEquivalentFluxes(gma)

def DSGMASystemEncode(gma):
    return _dspace_interface.DSGMASystemEncode(gma)

def DSGMASystemFromGMASystemMessage(message):
    return _dspace_interface.DSGMASystemFromGMASystemMessage(message)

def DSGMASystemDecode(length, buffer):
    return _dspace_interface.DSGMASystemDecode(length, buffer)
M_DS_SSYS_NULL = _dspace_interface.M_DS_SSYS_NULL
DS_SSYSTEM_FLAG_SINGULAR = _dspace_interface.DS_SSYSTEM_FLAG_SINGULAR
DS_SSYSTEM_FLAG_FREE_XD = _dspace_interface.DS_SSYSTEM_FLAG_FREE_XD
DS_SSYSTEM_FLAG_FREE_XI = _dspace_interface.DS_SSYSTEM_FLAG_FREE_XI
DS_SSYSTEM_FLAG_UNSTABLE = _dspace_interface.DS_SSYSTEM_FLAG_UNSTABLE
DS_SSYSTEM_FLAG_CONSERVED = _dspace_interface.DS_SSYSTEM_FLAG_CONSERVED
DS_SSYSTEM_FLAG_ADJUST_CODOMINANT_STOICHIOMETRY = _dspace_interface.DS_SSYSTEM_FLAG_ADJUST_CODOMINANT_STOICHIOMETRY

def DSSSystemCopy(ssys):
    return _dspace_interface.DSSSystemCopy(ssys)

def DSSSystemFree(ssys):
    return _dspace_interface.DSSSystemFree(ssys)

def DSSSystemWithTermsFromGMACyclical(ds, termArray, three_digit, location):
    return _dspace_interface.DSSSystemWithTermsFromGMACyclical(ds, termArray, three_digit, location)

def DSSSystemWithTermsFromGMA(gma, termArray):
    return _dspace_interface.DSSSystemWithTermsFromGMA(gma, termArray)

def DSSSystemByParsingStringList(*args):
    return _dspace_interface.DSSSystemByParsingStringList(*args)

def DSSSystemByParsingStrings(strings, Xd_a, numberOfEquations):
    return _dspace_interface.DSSSystemByParsingStrings(strings, Xd_a, numberOfEquations)

def DSSSystemSolvedAuxiliaryVariableMatrices(originalSSystem):
    return _dspace_interface.DSSSystemSolvedAuxiliaryVariableMatrices(originalSSystem)

def DSSSystemByRemovingAlgebraicConstraints(originalSSystem):
    return _dspace_interface.DSSSystemByRemovingAlgebraicConstraints(originalSSystem)

def DSSSystemSteadyStateFunction(ssys, Xi0, function):
    return _dspace_interface.DSSSystemSteadyStateFunction(ssys, Xi0, function)

def DSSSystemSteadyStateValues(ssys, Xi0):
    return _dspace_interface.DSSSystemSteadyStateValues(ssys, Xi0)

def DSuSSystemSteadyStateValues(ssys, Xi0):
    return _dspace_interface.DSuSSystemSteadyStateValues(ssys, Xi0)

def DSuSSystemSteadyStateValuesForConservedVariables(ssys, Xi0):
    return _dspace_interface.DSuSSystemSteadyStateValuesForConservedVariables(ssys, Xi0)

def DSSSystemAuxiliaryVariablesForSteadyState(ssys, Xdt0, Xi0):
    return _dspace_interface.DSSSystemAuxiliaryVariablesForSteadyState(ssys, Xdt0, Xi0)

def DSSSystemSteadyStateFluxForDependentVariables(ssys, Xd0, Xi0):
    return _dspace_interface.DSSSystemSteadyStateFluxForDependentVariables(ssys, Xd0, Xi0)

def DSSSystemSteadyStateFlux(ssys, Xi0):
    return _dspace_interface.DSSSystemSteadyStateFlux(ssys, Xi0)

def DSSSystemSteadyStateFluxForConservedVariables(ssys, Xi0):
    return _dspace_interface.DSSSystemSteadyStateFluxForConservedVariables(ssys, Xi0)

def DSuSSystemSteadyStateFlux(ssys, Xi0):
    return _dspace_interface.DSuSSystemSteadyStateFlux(ssys, Xi0)

def DSSSystemRouthArrayForPoolTurnover(ssys, F, hasImaginaryRoots):
    return _dspace_interface.DSSSystemRouthArrayForPoolTurnover(ssys, F, hasImaginaryRoots)

def DSSSystemRouthArrayForSteadyState(ssys, Xd0, Xi0):
    return _dspace_interface.DSSSystemRouthArrayForSteadyState(ssys, Xd0, Xi0)

def DSSSystemRouthArray(ssys, Xi0, hasImaginaryRoots):
    return _dspace_interface.DSSSystemRouthArray(ssys, Xi0, hasImaginaryRoots)

def DSSSystemNumberOfPositiveRootsForRouthArray(routhArray):
    return _dspace_interface.DSSSystemNumberOfPositiveRootsForRouthArray(routhArray)

def DSSSystemPositiveRoots(ssys, Xi0, hasImaginaryRoots):
    return _dspace_interface.DSSSystemPositiveRoots(ssys, Xi0, hasImaginaryRoots)

def DSSSystemPositiveRootsForSteadyStateAndFlux(ssys, Xd0, Xi0, flux0):
    return _dspace_interface.DSSSystemPositiveRootsForSteadyStateAndFlux(ssys, Xd0, Xi0, flux0)

def DSSSystemPositiveRootsForSteadyState(ssys, Xd0, Xi0):
    return _dspace_interface.DSSSystemPositiveRootsForSteadyState(ssys, Xd0, Xi0)

def DSSSystemRouthIndex(ssys, Xi0):
    return _dspace_interface.DSSSystemRouthIndex(ssys, Xi0)

def DSSSystemCharacteristicEquationCoefficientIndex(ssys, Xi0):
    return _dspace_interface.DSSSystemCharacteristicEquationCoefficientIndex(ssys, Xi0)

def DSSSystemCharacteristicEquationCoefficientsNumberSignChanges(ssys, Xi0):
    return _dspace_interface.DSSSystemCharacteristicEquationCoefficientsNumberSignChanges(ssys, Xi0)

def DSSSystemLogarithmicGain(ssys, XdName, XiName):
    return _dspace_interface.DSSSystemLogarithmicGain(ssys, XdName, XiName)

def DSuSSystemLogarithmicGain(ssys, XdName, XiName):
    return _dspace_interface.DSuSSystemLogarithmicGain(ssys, XdName, XiName)

def DSSSystemNumberOfEquations(ssys):
    return _dspace_interface.DSSSystemNumberOfEquations(ssys)

def DSSSystemNumberOfConservations(ssys):
    return _dspace_interface.DSSSystemNumberOfConservations(ssys)

def DSSSystemEquations(ssys):
    return _dspace_interface.DSSSystemEquations(ssys)

def DSSSystemSolution(ssys):
    return _dspace_interface.DSSSystemSolution(ssys)

def DSuSSystemSolution(ssys):
    return _dspace_interface.DSuSSystemSolution(ssys)

def DSSSystemLogarithmicSolution(ssys):
    return _dspace_interface.DSSSystemLogarithmicSolution(ssys)

def DSuSSystemLogarithmicSolution(ssys):
    return _dspace_interface.DSuSSystemLogarithmicSolution(ssys)

def DSSSystemAlpha(ssys):
    return _dspace_interface.DSSSystemAlpha(ssys)

def DSSSystemAlphaAdjusted(ssys):
    return _dspace_interface.DSSSystemAlphaAdjusted(ssys)

def DSSSystemBeta(ssys):
    return _dspace_interface.DSSSystemBeta(ssys)

def DSSSystemGd(ssys):
    return _dspace_interface.DSSSystemGd(ssys)

def DSSSystemGi(ssys):
    return _dspace_interface.DSSSystemGi(ssys)

def DSSSystemHd(ssys):
    return _dspace_interface.DSSSystemHd(ssys)

def DSSSystemHi(ssys):
    return _dspace_interface.DSSSystemHi(ssys)

def DSSSystemM(ssys):
    return _dspace_interface.DSSSystemM(ssys)

def DSSSystemM_a(ssys):
    return _dspace_interface.DSSSystemM_a(ssys)

def DSSSystemAd(ssys):
    return _dspace_interface.DSSSystemAd(ssys)

def DSSSystemQd_a(ssys):
    return _dspace_interface.DSSSystemQd_a(ssys)

def DSSSystemQi_a(ssys):
    return _dspace_interface.DSSSystemQi_a(ssys)

def DSSSystemQB_a(ssys):
    return _dspace_interface.DSSSystemQB_a(ssys)

def DSSSystemAd_a(ssys):
    return _dspace_interface.DSSSystemAd_a(ssys)

def DSSSystemAd_t(ssys):
    return _dspace_interface.DSSSystemAd_t(ssys)

def DSSSystemAi(ssys):
    return _dspace_interface.DSSSystemAi(ssys)

def DSSSystemB(ssys):
    return _dspace_interface.DSSSystemB(ssys)

def DSSSystemA(ssys):
    return _dspace_interface.DSSSystemA(ssys)

def DSSSystemG(ssys):
    return _dspace_interface.DSSSystemG(ssys)

def DSSSystemH(ssys):
    return _dspace_interface.DSSSystemH(ssys)

def DSSSystemXd(ssys):
    return _dspace_interface.DSSSystemXd(ssys)

def DSSSystemXd_a(ssys):
    return _dspace_interface.DSSSystemXd_a(ssys)

def DSSSystemXd_t(ssys):
    return _dspace_interface.DSSSystemXd_t(ssys)

def DSSSystemXd_b(ssys):
    return _dspace_interface.DSSSystemXd_b(ssys)

def DSSSystemXd_a_c(ssys):
    return _dspace_interface.DSSSystemXd_a_c(ssys)

def DSSSystemXi(ssys):
    return _dspace_interface.DSSSystemXi(ssys)

def DSSSystemHasSolution(ssys):
    return _dspace_interface.DSSSystemHasSolution(ssys)

def DSSSystemIsSingular(ssys):
    return _dspace_interface.DSSSystemIsSingular(ssys)

def DSSSystemIsConserved(ssys):
    return _dspace_interface.DSSSystemIsConserved(ssys)

def DSSSystemIsUnstable(ssys):
    return _dspace_interface.DSSSystemIsUnstable(ssys)

def DSSSystemIsFalseBlowing(ssys):
    return _dspace_interface.DSSSystemIsFalseBlowing(ssys)

def DSSSystemAdjustCodominantStoichiometry(ssys):
    return _dspace_interface.DSSSystemAdjustCodominantStoichiometry(ssys)

def DSSSystemShouldFreeXd(ssys):
    return _dspace_interface.DSSSystemShouldFreeXd(ssys)

def DSSSystemShouldFreeXi(ssys):
    return _dspace_interface.DSSSystemShouldFreeXi(ssys)

def DSSSystemSetIsSingular(ssys, isSingular):
    return _dspace_interface.DSSSystemSetIsSingular(ssys, isSingular)

def DSSSystemSetIsConserved(ssys, isConserved):
    return _dspace_interface.DSSSystemSetIsConserved(ssys, isConserved)

def DSSSystemSetIsUnstable(ssys, isUnstable):
    return _dspace_interface.DSSSystemSetIsUnstable(ssys, isUnstable)

def DSSSystemSetAdjustCodominantStoichiometry(ssys, AdjustStoichiometry):
    return _dspace_interface.DSSSystemSetAdjustCodominantStoichiometry(ssys, AdjustStoichiometry)

def DSSSystemSetShouldFreeXd(ssys, shouldFreeXd):
    return _dspace_interface.DSSSystemSetShouldFreeXd(ssys, shouldFreeXd)

def DSSSystemSetShouldFreeXi(ssys, shouldFreeXi):
    return _dspace_interface.DSSSystemSetShouldFreeXi(ssys, shouldFreeXi)

def DSSSystemRecalculateSolution(ssys):
    return _dspace_interface.DSSSystemRecalculateSolution(ssys)

def DSSSystemWithQuasiSteadyStates(ssystem, numberOfVariables, variableNames):
    return _dspace_interface.DSSSystemWithQuasiSteadyStates(ssystem, numberOfVariables, variableNames)

def DSSSystemPrint(ssys):
    return _dspace_interface.DSSSystemPrint(ssys)

def DSSSystemPrintEquations(ssys):
    return _dspace_interface.DSSSystemPrintEquations(ssys)

def DSSSystemPrintSolution(ssys):
    return _dspace_interface.DSSSystemPrintSolution(ssys)

def DSSSystemPrintLogarithmicSolution(ssys):
    return _dspace_interface.DSSSystemPrintLogarithmicSolution(ssys)

def DSSSystemAdjustStoichiometryOfCodominantCase(ssys):
    return _dspace_interface.DSSSystemAdjustStoichiometryOfCodominantCase(ssys)

def DSSSystemEncode(ssys):
    return _dspace_interface.DSSSystemEncode(ssys)

def DSSSystemFromSSystemMessage(message):
    return _dspace_interface.DSSSystemFromSSystemMessage(message)

def DSSSystemDecode(length, buffer):
    return _dspace_interface.DSSSystemDecode(length, buffer)
M_DS_CASE_NULL = _dspace_interface.M_DS_CASE_NULL
DS_CASE_NUMBER_BIG_ENDIAN = _dspace_interface.DS_CASE_NUMBER_BIG_ENDIAN
DS_CASE_NUMBER_SMALL_ENDIAN = _dspace_interface.DS_CASE_NUMBER_SMALL_ENDIAN

def DSCaseSetEndianness(endianness):
    return _dspace_interface.DSCaseSetEndianness(endianness)

def DSCaseEndianness():
    return _dspace_interface.DSCaseEndianness()

def DSCaseCopy(aCase):
    return _dspace_interface.DSCaseCopy(aCase)

def DSCaseFree(aCase):
    return _dspace_interface.DSCaseFree(aCase)

def DSCaseVolumeFree(caseVolume):
    return _dspace_interface.DSCaseVolumeFree(caseVolume)

def DSCaseMassBalanceDataFree(aCase):
    return _dspace_interface.DSCaseMassBalanceDataFree(aCase)

def DSCaseWithTermsFromGMA(gma, termArray, prefix):
    return _dspace_interface.DSCaseWithTermsFromGMA(gma, termArray, prefix)

def DSCaseWithTermsFromDesignSpace(ds, termArray, prefix):
    return _dspace_interface.DSCaseWithTermsFromDesignSpace(ds, termArray, prefix)

def DSCaseHasSolution(aCase):
    return _dspace_interface.DSCaseHasSolution(aCase)

def DSCaseNumberOfEquations(aCase):
    return _dspace_interface.DSCaseNumberOfEquations(aCase)

def DSCaseNumberOfConservations(aCase):
    return _dspace_interface.DSCaseNumberOfConservations(aCase)

def DSCaseNumberOfInheritedConservations(aCase):
    return _dspace_interface.DSCaseNumberOfInheritedConservations(aCase)

def DSCaseEquations(aCase):
    return _dspace_interface.DSCaseEquations(aCase)

def DSCaseSolution(aCase):
    return _dspace_interface.DSCaseSolution(aCase)

def DSCaseLogarithmicSolution(aCase):
    return _dspace_interface.DSCaseLogarithmicSolution(aCase)

def DSCaseNumberOfConditions(aCase):
    return _dspace_interface.DSCaseNumberOfConditions(aCase)

def DSCaseConditions(aCase):
    return _dspace_interface.DSCaseConditions(aCase)

def DSCaseLogarithmicConditions(aCase):
    return _dspace_interface.DSCaseLogarithmicConditions(aCase)

def DSCaseNumberOfBoundaries(aCase):
    return _dspace_interface.DSCaseNumberOfBoundaries(aCase)

def DSCaseBoundaries(aCase):
    return _dspace_interface.DSCaseBoundaries(aCase)

def DSCaseLogarithmicBoundaries(aCase):
    return _dspace_interface.DSCaseLogarithmicBoundaries(aCase)

def DSCaseNumber(aCase):
    return _dspace_interface.DSCaseNumber(aCase)

def DSCaseIdentifier(aCase):
    return _dspace_interface.DSCaseIdentifier(aCase)

def DSCaseSignature(aCase):
    return _dspace_interface.DSCaseSignature(aCase)

def DSCaseSSystem(aCase):
    return _dspace_interface.DSCaseSSystem(aCase)

def DSCaseLogarithmicGain(aCase, XdName, XiName):
    return _dspace_interface.DSCaseLogarithmicGain(aCase, XdName, XiName)

def DSCaseXd(aCase):
    return _dspace_interface.DSCaseXd(aCase)

def DSCaseXd_a(aCase):
    return _dspace_interface.DSCaseXd_a(aCase)

def DSCaseXi(aCase):
    return _dspace_interface.DSCaseXi(aCase)

def DSCaseNumberOfMassBalances(aCase):
    return _dspace_interface.DSCaseNumberOfMassBalances(aCase)

def DSCaseDominantFinAtIndex(aCase, i):
    return _dspace_interface.DSCaseDominantFinAtIndex(aCase, i)

def DSCaseDominantFoutAtIndex(aCase, i):
    return _dspace_interface.DSCaseDominantFoutAtIndex(aCase, i)

def DSCaseRecalculateBoundaryMatrices(aCase):
    return _dspace_interface.DSCaseRecalculateBoundaryMatrices(aCase)

def DSCaseDoubleValueBoundariesAtPoint(aCase, point):
    return _dspace_interface.DSCaseDoubleValueBoundariesAtPoint(aCase, point)

def DSCaseDoubleValueBoundariesAtPointSortXi(aCase, point):
    return _dspace_interface.DSCaseDoubleValueBoundariesAtPointSortXi(aCase, point)

def DSCaseAddConstraints(aCase, strings, numberOfConstraints):
    return _dspace_interface.DSCaseAddConstraints(aCase, strings, numberOfConstraints)

def DSCaseRemoveRedundantBoundaries(aCase):
    return _dspace_interface.DSCaseRemoveRedundantBoundaries(aCase)

def DSCaseAdjustStoichiometryOfCodominantCase(aCase):
    return _dspace_interface.DSCaseAdjustStoichiometryOfCodominantCase(aCase)

def DSCaseCodominantCaseFulfillMassBalances(ds, newCase, numberZeroBoundaries, zeroBoundaries, numberZeroBoundariesPerBlock, factors):
    return _dspace_interface.DSCaseCodominantCaseFulfillMassBalances(ds, newCase, numberZeroBoundaries, zeroBoundaries, numberZeroBoundariesPerBlock, factors)

def dsCyclicalDesignSpaceCodominantCaseAdjustConditionMatrices_DominantInput(newCase, dominant_input, factor):
    return _dspace_interface.dsCyclicalDesignSpaceCodominantCaseAdjustConditionMatrices_DominantInput(newCase, dominant_input, factor)

def DSCaseConditionsAreValid(aCase):
    return _dspace_interface.DSCaseConditionsAreValid(aCase)

def DSCaseHasSharedBoundaries(aCase1, aCase2, intersecting):
    return _dspace_interface.DSCaseHasSharedBoundaries(aCase1, aCase2, intersecting)

def DSCaseSharedBoundaries(aCase1, aCase2, intersecting):
    return _dspace_interface.DSCaseSharedBoundaries(aCase1, aCase2, intersecting)

def DSCaseSharedBoundariesNumberOfVertices(aCase1, aCase2, lowerBounds, upperBounds, maxVertices, limitVertices):
    return _dspace_interface.DSCaseSharedBoundariesNumberOfVertices(aCase1, aCase2, lowerBounds, upperBounds, maxVertices, limitVertices)

def DSCaseIsValid(aCase, strict):
    return _dspace_interface.DSCaseIsValid(aCase, strict)

def DSCaseSharedBoundariesIsValid(aCase):
    return _dspace_interface.DSCaseSharedBoundariesIsValid(aCase)

def DSCasesSharedBoundariesIsValid(aCase1, aCase2):
    return _dspace_interface.DSCasesSharedBoundariesIsValid(aCase1, aCase2)

def DSCaseIsConsistent(aCase):
    return _dspace_interface.DSCaseIsConsistent(aCase)

def DSCaseIsValidInStateSpace(aCase):
    return _dspace_interface.DSCaseIsValidInStateSpace(aCase)

def DSCaseIsValidAtPoint(aCase, variablesToFix):
    return _dspace_interface.DSCaseIsValidAtPoint(aCase, variablesToFix)

def DSCaseIsConsistentAtPoint(aCase, Xd_p, Xi_p):
    return _dspace_interface.DSCaseIsConsistentAtPoint(aCase, Xd_p, Xi_p)

def DSCaseIsValidInStateSpaceAtPoint(aCase, Xd_p, Xi_p):
    return _dspace_interface.DSCaseIsValidInStateSpaceAtPoint(aCase, Xd_p, Xi_p)

def DSCaseIsValidAtSlice(aCase, lowerBounds, upperBounds, strict):
    return _dspace_interface.DSCaseIsValidAtSlice(aCase, lowerBounds, upperBounds, strict)

def DSCaseIsConsistentAtSlice(aCase, lowerBounds, upperBounds, strict):
    return _dspace_interface.DSCaseIsConsistentAtSlice(aCase, lowerBounds, upperBounds, strict)

def DSCaseVerticesForSlice(aCase, lowerBounds, upperBounds, numberOfVariables, variables):
    return _dspace_interface.DSCaseVerticesForSlice(aCase, lowerBounds, upperBounds, numberOfVariables, variables)

def DSCaseBoundingRangeForVariableWithConstraints(aCase, variable, lowerBounds, upperBounds):
    return _dspace_interface.DSCaseBoundingRangeForVariableWithConstraints(aCase, variable, lowerBounds, upperBounds)

def DSCaseBoundingRangeForVariable(aCase, variable):
    return _dspace_interface.DSCaseBoundingRangeForVariable(aCase, variable)

def DSCaseVerticesFor1DSlice(aCase, lowerBounds, upperBounds, xVariable):
    return _dspace_interface.DSCaseVerticesFor1DSlice(aCase, lowerBounds, upperBounds, xVariable)

def DSCaseVerticesFor2DSlice(aCase, lowerBounds, upperBounds, xVariable, yVariable):
    return _dspace_interface.DSCaseVerticesFor2DSlice(aCase, lowerBounds, upperBounds, xVariable, yVariable)

def DSCaseVertexEquationsFor2DSlice(aCase, lowerBounds, upperBounds, xVariable, yVariable, log_out):
    return _dspace_interface.DSCaseVertexEquationsFor2DSlice(aCase, lowerBounds, upperBounds, xVariable, yVariable, log_out)

def DSCaseFacesFor3DSliceAndConnectivity(aCase, lowerBounds, upperBounds, xVariable, yVariable, zVariable):
    return _dspace_interface.DSCaseFacesFor3DSliceAndConnectivity(aCase, lowerBounds, upperBounds, xVariable, yVariable, zVariable)

def DSCaseVerticesFor3DSliceAndConnectivity(aCase, lowerBounds, upperBounds, xVariable, yVariable, zVariable):
    return _dspace_interface.DSCaseVerticesFor3DSliceAndConnectivity(aCase, lowerBounds, upperBounds, xVariable, yVariable, zVariable)

def DSCaseVerticesFor3DSlice(aCase, lowerBounds, upperBounds, xVariable, yVariable, zVariable):
    return _dspace_interface.DSCaseVerticesFor3DSlice(aCase, lowerBounds, upperBounds, xVariable, yVariable, zVariable)

def DSCaseVerticesForNDSlice(aCase, lowerBounds, upperBounds):
    return _dspace_interface.DSCaseVerticesForNDSlice(aCase, lowerBounds, upperBounds)

def DSCaseVerticesNumberOfVerticesForNDSlice(aCase, lowerBounds, upperBounds, maxVertices, limitVertices):
    return _dspace_interface.DSCaseVerticesNumberOfVerticesForNDSlice(aCase, lowerBounds, upperBounds, maxVertices, limitVertices)

def DSCaseConsistentParameterAndStateSet(aCase):
    return _dspace_interface.DSCaseConsistentParameterAndStateSet(aCase)

def DSCaseValidParameterAndStateSet(aCase):
    return _dspace_interface.DSCaseValidParameterAndStateSet(aCase)

def DSCaseValidParameterSet(aCase):
    return _dspace_interface.DSCaseValidParameterSet(aCase)

def DSCaseSharedBoundariesValidParameterSet(aCase):
    return _dspace_interface.DSCaseSharedBoundariesValidParameterSet(aCase)

def DSCaseValidParameterSetByOptimizingFunction(aCase, function, minimize):
    return _dspace_interface.DSCaseValidParameterSetByOptimizingFunction(aCase, function, minimize)

def DSCaseValidParameterSetAtSlice(aCase, lowerBounds, upperBounds):
    return _dspace_interface.DSCaseValidParameterSetAtSlice(aCase, lowerBounds, upperBounds)

def DSCaseValidParameterSetAtSliceByOptimizingFunction(aCase, lowerBounds, upperBounds, function, minimize):
    return _dspace_interface.DSCaseValidParameterSetAtSliceByOptimizingFunction(aCase, lowerBounds, upperBounds, function, minimize)

def DSCaseParseOptimizationFunction(aCase, string):
    return _dspace_interface.DSCaseParseOptimizationFunction(aCase, string)

def DSCaseVolume_lrs(aCase, lowerBounds, upperBounds, maxNumberVertices, limitVertices, return_vertices_matrix):
    return _dspace_interface.DSCaseVolume_lrs(aCase, lowerBounds, upperBounds, maxNumberVertices, limitVertices, return_vertices_matrix)

def dsCallqHull():
    return _dspace_interface.dsCallqHull()

def DSCaseCentroid_qhull(aCase, lowerBounds, upperBounds, maxNumberVertices, limitVertices):
    return _dspace_interface.DSCaseCentroid_qhull(aCase, lowerBounds, upperBounds, maxNumberVertices, limitVertices)

def dsCaseCalculateCentroid_qhull(points, dim, numpoints, centroid):
    return _dspace_interface.dsCaseCalculateCentroid_qhull(points, dim, numpoints, centroid)

def dsCaseVolumeSetAverage(variables, Volume):
    return _dspace_interface.dsCaseVolumeSetAverage(variables, Volume)

def DSCaseVolumeGetVolume(Volume_str):
    return _dspace_interface.DSCaseVolumeGetVolume(Volume_str)

def DSCaseVolumeGetVertices(Volume_str):
    return _dspace_interface.DSCaseVolumeGetVertices(Volume_str)

def DSCaseVolumeGetVerticesMatrix(Volume_str):
    return _dspace_interface.DSCaseVolumeGetVerticesMatrix(Volume_str)

def DSCaseVolumeGetOperatingPoint2D(Volume_str):
    return _dspace_interface.DSCaseVolumeGetOperatingPoint2D(Volume_str)

def DSCaseDimension(aCase, lowerBounds, upperBounds):
    return _dspace_interface.DSCaseDimension(aCase, lowerBounds, upperBounds)

def DSPseudoCaseFromIntersectionOfCases(numberOfCases, cases):
    return _dspace_interface.DSPseudoCaseFromIntersectionOfCases(numberOfCases, cases)

def DSPseudoCaseFromIntersectionOfCasesExcludingSlice(numberOfCases, cases, numberOfExceptions, exceptionVarNames):
    return _dspace_interface.DSPseudoCaseFromIntersectionOfCasesExcludingSlice(numberOfCases, cases, numberOfExceptions, exceptionVarNames)

def DSCaseIntersectionListIsValid(*args):
    return _dspace_interface.DSCaseIntersectionListIsValid(*args)

def DSCaseIntersectionIsValid(numberOfCases, cases):
    return _dspace_interface.DSCaseIntersectionIsValid(numberOfCases, cases)

def DSCaseIntersectionIsValidAtSlice(numberOfCases, cases, lowerBounds, upperBounds):
    return _dspace_interface.DSCaseIntersectionIsValidAtSlice(numberOfCases, cases, lowerBounds, upperBounds)

def DSCaseIntersectionVerticesForSlice(numberOfCases, cases, lowerBounds, upperBounds, numberOfVariables, variables):
    return _dspace_interface.DSCaseIntersectionVerticesForSlice(numberOfCases, cases, lowerBounds, upperBounds, numberOfVariables, variables)

def DSCaseIntersectionFacesFor3DSliceAndConnectivity(numberOfCases, cases, lowerBounds, upperBounds, xVariable, yVariable, zVariable):
    return _dspace_interface.DSCaseIntersectionFacesFor3DSliceAndConnectivity(numberOfCases, cases, lowerBounds, upperBounds, xVariable, yVariable, zVariable)

def DSCaseIntersectionExceptSliceIsValid(numberOfCases, cases, numberOfExceptions, exceptionVarNames):
    return _dspace_interface.DSCaseIntersectionExceptSliceIsValid(numberOfCases, cases, numberOfExceptions, exceptionVarNames)

def DSCaseIntersectionExceptSliceIsValidAtSlice(numberOfCases, cases, numberOfExceptions, exceptionVarNames, lowerBounds, upperBounds):
    return _dspace_interface.DSCaseIntersectionExceptSliceIsValidAtSlice(numberOfCases, cases, numberOfExceptions, exceptionVarNames, lowerBounds, upperBounds)

def DSCaseIntersectionExceptSliceValidParameterSet(numberOfCases, cases, numberOfExceptions, exceptionVarNames):
    return _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSet(numberOfCases, cases, numberOfExceptions, exceptionVarNames)

def DSCaseIntersectionExceptSliceValidParameterSetWithConstraints(numberOfCases, cases, numberOfExceptions, exceptionVarNames, constraints, numberOfConstraints):
    return _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSetWithConstraints(numberOfCases, cases, numberOfExceptions, exceptionVarNames, constraints, numberOfConstraints)

def DSCaseIntersectionExceptSliceValidParameterSetAtSlice(numberOfCases, cases, numberOfExceptions, exceptionVarNames, lowerBounds, upperBounds):
    return _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSetAtSlice(numberOfCases, cases, numberOfExceptions, exceptionVarNames, lowerBounds, upperBounds)

def DSCaseIntersectionExceptSliceValidParameterSetByOptimizingFunction(numberOfCases, cases, numberOfExceptions, exceptionVarNames, function, minimize):
    return _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSetByOptimizingFunction(numberOfCases, cases, numberOfExceptions, exceptionVarNames, function, minimize)

def DSCaseIntersectionExceptSliceValidParameterSetWithConstraintsByOptimizingFunction(numberOfCases, cases, numberOfExceptions, exceptionVarNames, constraints, numberOfConstraints, function, minimize):
    return _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSetWithConstraintsByOptimizingFunction(numberOfCases, cases, numberOfExceptions, exceptionVarNames, constraints, numberOfConstraints, function, minimize)

def DSCaseIntersectionExceptSliceValidParameterSetAtSliceByOptimizingFunction(numberOfCases, cases, numberOfExceptions, exceptionVarNames, lowerBounds, upperBounds, function, minimize):
    return _dspace_interface.DSCaseIntersectionExceptSliceValidParameterSetAtSliceByOptimizingFunction(numberOfCases, cases, numberOfExceptions, exceptionVarNames, lowerBounds, upperBounds, function, minimize)

def DSCaseNumberForSignature(signature, gma):
    return _dspace_interface.DSCaseNumberForSignature(signature, gma)

def DSCaseSignatureForCaseNumber(caseNumber, gma):
    return _dspace_interface.DSCaseSignatureForCaseNumber(caseNumber, gma)

def DSCaseGetSignatureNeighbors(aCase, ds):
    return _dspace_interface.DSCaseGetSignatureNeighbors(aCase, ds)

def DSUIntegerVectorDimension(aVector):
    return _dspace_interface.DSUIntegerVectorDimension(aVector)

def DSUIntegerVectorValueAtIndex(aVector, index):
    return _dspace_interface.DSUIntegerVectorValueAtIndex(aVector, index)

def DSCaseSignatureToString(aCase):
    return _dspace_interface.DSCaseSignatureToString(aCase)

def DSCasePrint(aCase):
    return _dspace_interface.DSCasePrint(aCase)

def DSCasePrintEquations(aCase):
    return _dspace_interface.DSCasePrintEquations(aCase)

def DSCasePrintSolution(aCase):
    return _dspace_interface.DSCasePrintSolution(aCase)

def DSCasePrintLogarithmicSolution(aCase):
    return _dspace_interface.DSCasePrintLogarithmicSolution(aCase)

def DSCasePrintConditions(aCase):
    return _dspace_interface.DSCasePrintConditions(aCase)

def DSCasePrintLogarithmicConditions(aCase):
    return _dspace_interface.DSCasePrintLogarithmicConditions(aCase)

def DSCasePrintBoundaries(aCase):
    return _dspace_interface.DSCasePrintBoundaries(aCase)

def DSCasePrintLogarithmicBoundaries(aCase):
    return _dspace_interface.DSCasePrintLogarithmicBoundaries(aCase)

def DSCaseEncode(aCase):
    return _dspace_interface.DSCaseEncode(aCase)

def DSCaseFromCaseMessage(message):
    return _dspace_interface.DSCaseFromCaseMessage(message)

def DSCaseDecode(length, buffer):
    return _dspace_interface.DSCaseDecode(length, buffer)

def DSCaseEigenSubspaces(aCase):
    return _dspace_interface.DSCaseEigenSubspaces(aCase)

def DSuCaseFree(uCase):
    return _dspace_interface.DSuCaseFree(uCase)

def DSuCaseIsValid(aCase, strict):
    return _dspace_interface.DSuCaseIsValid(aCase, strict)

def dsUnstableCaseGetAdditionalConstraintMatrices(uCase, bSignature):
    return _dspace_interface.dsUnstableCaseGetAdditionalConstraintMatrices(uCase, bSignature)

def DSUnstableCaseAddBoundaryMatrices(aCase, ds):
    return _dspace_interface.DSUnstableCaseAddBoundaryMatrices(aCase, ds)

def DSUnstableCaseExpandConditionMatrices(uCase):
    return _dspace_interface.DSUnstableCaseExpandConditionMatrices(uCase)

def DSUnstableCaseGetKnife(uCase, gAd):
    return _dspace_interface.DSUnstableCaseGetKnife(uCase, gAd)

def DSUnstableCaseGetXd_b(uCase, Ad):
    return _dspace_interface.DSUnstableCaseGetXd_b(uCase, Ad)

def DSUnstableCaseIdentifyBlowingDependentVariables(uCase):
    return _dspace_interface.DSUnstableCaseIdentifyBlowingDependentVariables(uCase)

def DSUnstableCasePrintLinearProblem(lp, uCase, bSignature):
    return _dspace_interface.DSUnstableCasePrintLinearProblem(lp, uCase, bSignature)

def DSUnstableCaseDetermineBlowingBehavior(lp, uCase, bSignature):
    return _dspace_interface.DSUnstableCaseDetermineBlowingBehavior(lp, uCase, bSignature)

def DSUnstableCaseCreateBoundaryMatrices(uCase):
    return _dspace_interface.DSUnstableCaseCreateBoundaryMatrices(uCase)

def DSUnstableCaseCreateBoundaryMatrices_alt(uCase):
    return _dspace_interface.DSUnstableCaseCreateBoundaryMatrices_alt(uCase)

def DSUnstableCaseCreateBoundaryMatrices_alt2(uCase):
    return _dspace_interface.DSUnstableCaseCreateBoundaryMatrices_alt2(uCase)

def DSUnstableCaseGetEqualityAndKnife(pInverse, gaussArray, uCase):
    return _dspace_interface.DSUnstableCaseGetEqualityAndKnife(pInverse, gaussArray, uCase)

def dsUnstableCaseLinearProblemAddEqualityConstraints(A, B, uCase):
    return _dspace_interface.dsUnstableCaseLinearProblemAddEqualityConstraints(A, B, uCase)

def dsUnstableCaseLinearProblemAddKnifeEdgeConditions(A_, B_, uCase):
    return _dspace_interface.dsUnstableCaseLinearProblemAddKnifeEdgeConditions(A_, B_, uCase)

def DSUnstableCaseGetSubSetPseudoInverse(Xd_t, Xd_e, Xd_b, Ad):
    return _dspace_interface.DSUnstableCaseGetSubSetPseudoInverse(Xd_t, Xd_e, Xd_b, Ad)

def DSUnstableCaseConditionsAreValid(uCase, bSignature):
    return _dspace_interface.DSUnstableCaseConditionsAreValid(uCase, bSignature)

def dsUnstableCaseLinearProblemForMatrices(A, B, uCase, bSignature):
    return _dspace_interface.dsUnstableCaseLinearProblemForMatrices(A, B, uCase, bSignature)

def dsUnstableCaseLinearProblemForCaseValidity(U, zeta, uCase, bSignature):
    return _dspace_interface.dsUnstableCaseLinearProblemForCaseValidity(U, zeta, uCase, bSignature)

def DSUnstableCaseListAllSubcases(aCase, ds):
    return _dspace_interface.DSUnstableCaseListAllSubcases(aCase, ds)

def DSUnstableCaseSubcasesCount(aCase, ds):
    return _dspace_interface.DSUnstableCaseSubcasesCount(aCase, ds)
M_DS_DESIGN_SPACE_NULL = _dspace_interface.M_DS_DESIGN_SPACE_NULL
DS_DESIGN_SPACE_FLAG_SERIAL = _dspace_interface.DS_DESIGN_SPACE_FLAG_SERIAL
DS_DESIGN_SPACE_FLAG_CYCLICAL = _dspace_interface.DS_DESIGN_SPACE_FLAG_CYCLICAL
DS_DESIGN_SPACE_FLAG_RESOLVE_CO_DOMINANCE = _dspace_interface.DS_DESIGN_SPACE_FLAG_RESOLVE_CO_DOMINANCE
DS_DESIGN_SPACE_FLAG_UNSTABLE = _dspace_interface.DS_DESIGN_SPACE_FLAG_UNSTABLE
DS_DESIGN_SPACE_FLAG_CONSERVATIONS = _dspace_interface.DS_DESIGN_SPACE_FLAG_CONSERVATIONS
DS_DESIGN_SPACE_FLAG_CO_DOMINANCE_ADJUST_STOICHIOMETRY = _dspace_interface.DS_DESIGN_SPACE_FLAG_CO_DOMINANCE_ADJUST_STOICHIOMETRY
DS_DESIGN_SPACE_FLAG_CO_DOMINANCE_SKIP_OVERLAPPING_PHENOTYPES = _dspace_interface.DS_DESIGN_SPACE_FLAG_CO_DOMINANCE_SKIP_OVERLAPPING_PHENOTYPES
DS_DESIGN_SPACE_FLAG_MASS_BALANCES = _dspace_interface.DS_DESIGN_SPACE_FLAG_MASS_BALANCES
DS_DESIGN_SPACE_FLAG_C0_DOMINANCE_ADJUST_BOUNDARIES = _dspace_interface.DS_DESIGN_SPACE_FLAG_C0_DOMINANCE_ADJUST_BOUNDARIES

def DSDesignSpaceAlloc():
    return _dspace_interface.DSDesignSpaceAlloc()

def DSDesignSpaceFree(ds):
    return _dspace_interface.DSDesignSpaceFree(ds)

def DSDesignSpaceByParsingStringList(*args):
    return _dspace_interface.DSDesignSpaceByParsingStringList(*args)

def DSDesignSpaceByParsingStrings(strings, Xd_a, numberOfEquations):
    return _dspace_interface.DSDesignSpaceByParsingStrings(strings, Xd_a, numberOfEquations)

def DSDesignSpaceByParsingStringsWithXi(strings, Xd_a, Xi, numberOfEquations):
    return _dspace_interface.DSDesignSpaceByParsingStringsWithXi(strings, Xd_a, Xi, numberOfEquations)

def DSDesignSpaceSetGMA(ds, gma):
    return _dspace_interface.DSDesignSpaceSetGMA(ds, gma)

def DSDesignSpaceAddConditions(ds, Cd, Ci, delta):
    return _dspace_interface.DSDesignSpaceAddConditions(ds, Cd, Ci, delta)

def DSDesignSpaceSetSerial(ds, serial):
    return _dspace_interface.DSDesignSpaceSetSerial(ds, serial)

def DSDesignSpaceSetCyclical(ds, cyclical):
    return _dspace_interface.DSDesignSpaceSetCyclical(ds, cyclical)

def DSDesignSpaceSetResolveCoDominance(ds, Codominance):
    return _dspace_interface.DSDesignSpaceSetResolveCoDominance(ds, Codominance)

def DSDesignSpaceSetAdjustCodominantStoichiometry(ds, adjust):
    return _dspace_interface.DSDesignSpaceSetAdjustCodominantStoichiometry(ds, adjust)

def DSDesignSpaceSetSkipOverlappingCodominantPhenotypes(ds, adjust):
    return _dspace_interface.DSDesignSpaceSetSkipOverlappingCodominantPhenotypes(ds, adjust)

def DSDesignSpaceSetShouldConsiderMassBalances(ds, mass_balance):
    return _dspace_interface.DSDesignSpaceSetShouldConsiderMassBalances(ds, mass_balance)

def DSDesignSpaceSetAdjustCodominantBoundaries(ds, adjust_boundaries):
    return _dspace_interface.DSDesignSpaceSetAdjustCodominantBoundaries(ds, adjust_boundaries)

def DSDesignSpaceSetUnstable(ds, Unstable):
    return _dspace_interface.DSDesignSpaceSetUnstable(ds, Unstable)

def DSDesignSpaceSetResolveConservations(ds, Conservations):
    return _dspace_interface.DSDesignSpaceSetResolveConservations(ds, Conservations)

def DSDesignSpaceSetNumberOfConservations(ds, numberOfConservations):
    return _dspace_interface.DSDesignSpaceSetNumberOfConservations(ds, numberOfConservations)

def DSDesignSpaceSetNumberOfInheritedConservations(collapsed, original):
    return _dspace_interface.DSDesignSpaceSetNumberOfInheritedConservations(collapsed, original)

def DSDesignSpaceInitializeMassBalances(ds, fin_strings, fout_strings, signature_string, numberOfMassBalances, metabolicBlocks, S_string, rows, columns, rxns):
    return _dspace_interface.DSDesignSpaceInitializeMassBalances(ds, fin_strings, fout_strings, signature_string, numberOfMassBalances, metabolicBlocks, S_string, rows, columns, rxns)

def DSDesignSpaceSerial(ds):
    return _dspace_interface.DSDesignSpaceSerial(ds)

def DSDesignSpaceCyclical(ds):
    return _dspace_interface.DSDesignSpaceCyclical(ds)

def DSDesignSpaceResolveCoDominance(ds):
    return _dspace_interface.DSDesignSpaceResolveCoDominance(ds)

def DSDesignSpaceUnstable(ds):
    return _dspace_interface.DSDesignSpaceUnstable(ds)

def DSDesignSpaceConserved(ds):
    return _dspace_interface.DSDesignSpaceConserved(ds)

def DSDesignSpaceShouldConsiderMassBalances(ds):
    return _dspace_interface.DSDesignSpaceShouldConsiderMassBalances(ds)

def DSDesignSpaceAdjustCodominantStoichiometry(ds):
    return _dspace_interface.DSDesignSpaceAdjustCodominantStoichiometry(ds)

def DSDesignSpaceSkipOverlappingCodominantPhenotypes(ds):
    return _dspace_interface.DSDesignSpaceSkipOverlappingCodominantPhenotypes(ds)

def DSDesignSpaceShouldAdjustCodominantBoundaries(ds):
    return _dspace_interface.DSDesignSpaceShouldAdjustCodominantBoundaries(ds)

def DSDesignSpaceFinAtIndex(ds, n):
    return _dspace_interface.DSDesignSpaceFinAtIndex(ds, n)

def DSDesignSpaceFoutAtIndex(ds, n):
    return _dspace_interface.DSDesignSpaceFoutAtIndex(ds, n)

def DSDesignSpaceNumberOfMetabolicBlocks(ds):
    return _dspace_interface.DSDesignSpaceNumberOfMetabolicBlocks(ds)

def DSDesignSpaceXi(ds):
    return _dspace_interface.DSDesignSpaceXi(ds)

def DSDesignSpaceXd(ds):
    return _dspace_interface.DSDesignSpaceXd(ds)

def DSDesignSpaceNumberOfEquations(ds):
    return _dspace_interface.DSDesignSpaceNumberOfEquations(ds)

def DSDesignSpaceEquations(ds):
    return _dspace_interface.DSDesignSpaceEquations(ds)

def DSDesignSpaceSignature(ds):
    return _dspace_interface.DSDesignSpaceSignature(ds)

def DSDesignSpaceDominantSignature(ds, Xi, Xd):
    return _dspace_interface.DSDesignSpaceDominantSignature(ds, Xi, Xd)

def DSDesignSpaceSignatureToString(ds):
    return _dspace_interface.DSDesignSpaceSignatureToString(ds)

def DSDesignSpaceNumberOfValidCases(ds):
    return _dspace_interface.DSDesignSpaceNumberOfValidCases(ds)

def DSDesignSpaceNumberOfValidBlowingCases(ds, strict):
    return _dspace_interface.DSDesignSpaceNumberOfValidBlowingCases(ds, strict)

def DSDesignSpaceNumberOfCases(ds):
    return _dspace_interface.DSDesignSpaceNumberOfCases(ds)

def DSDesignSpaceNumberOfConservations(ds):
    return _dspace_interface.DSDesignSpaceNumberOfConservations(ds)

def DSDesignSpaceNumberOfBoundaries(ds):
    return _dspace_interface.DSDesignSpaceNumberOfBoundaries(ds)

def DSDesignSpaceCaseWithCaseNumber(ds, caseNumber):
    return _dspace_interface.DSDesignSpaceCaseWithCaseNumber(ds, caseNumber)

def DSDesignSpaceCaseWithCaseIdentifier(ds, identifer):
    return _dspace_interface.DSDesignSpaceCaseWithCaseIdentifier(ds, identifer)

def DSDesignSpaceCaseWithCaseSignature(ds, signature):
    return _dspace_interface.DSDesignSpaceCaseWithCaseSignature(ds, signature)

def DSDesignSpaceCaseWithCaseNumberIsValid(ds, caseNumber):
    return _dspace_interface.DSDesignSpaceCaseWithCaseNumberIsValid(ds, caseNumber)

def DSDesignSpaceCaseWithCaseSignatureIsValid(ds, signature):
    return _dspace_interface.DSDesignSpaceCaseWithCaseSignatureIsValid(ds, signature)

def DSDesignSpaceGMASystem(ds):
    return _dspace_interface.DSDesignSpaceGMASystem(ds)

def DSDesignSpaceCyclicalCaseDictionary(ds):
    return _dspace_interface.DSDesignSpaceCyclicalCaseDictionary(ds)

def DSDesignSpaceCasePrefix(ds):
    return _dspace_interface.DSDesignSpaceCasePrefix(ds)

def DSDesignSpaceTermListForAllStrings(strings, numberOfEquations):
    return _dspace_interface.DSDesignSpaceTermListForAllStrings(strings, numberOfEquations)

def DSDesignSpaceAddConstraints(ds, strings, numberOfConstraints):
    return _dspace_interface.DSDesignSpaceAddConstraints(ds, strings, numberOfConstraints)

def DSDesignSpacePrint(ds):
    return _dspace_interface.DSDesignSpacePrint(ds)

def DSDesignSpaceCaseNumbersWithPrefix(ds, sizeOfPrefix, prefix, numberOfCases):
    return _dspace_interface.DSDesignSpaceCaseNumbersWithPrefix(ds, sizeOfPrefix, prefix, numberOfCases)

def DSDesignSpaceCalculateCases(ds, numberOfCase, cases):
    return _dspace_interface.DSDesignSpaceCalculateCases(ds, numberOfCase, cases)

def DSDesignSpaceCalculateValidCasesByPrunning(ds):
    return _dspace_interface.DSDesignSpaceCalculateValidCasesByPrunning(ds)

def DSDesignSpaceCalculateAllValidCases(ds):
    return _dspace_interface.DSDesignSpaceCalculateAllValidCases(ds)

def DSDesignSpaceCalculateAllValidCasesForSliceByResolvingCyclicalCases(ds, lower, upper, strict):
    return _dspace_interface.DSDesignSpaceCalculateAllValidCasesForSliceByResolvingCyclicalCases(ds, lower, upper, strict)

def DSDesignSpaceCalculateAllValidCasesByResolvingCyclicalCases(ds):
    return _dspace_interface.DSDesignSpaceCalculateAllValidCasesByResolvingCyclicalCases(ds)

def DSDesignSpaceCalculateAllValidCasesForSlice(ds, lower, upper):
    return _dspace_interface.DSDesignSpaceCalculateAllValidCasesForSlice(ds, lower, upper)

def DSDesignSpaceCalculateAllValidCasesForSliceNonStrict(ds, lower, upper):
    return _dspace_interface.DSDesignSpaceCalculateAllValidCasesForSliceNonStrict(ds, lower, upper)

def DSDesignSpaceNumberOfCyclicalCases(ds):
    return _dspace_interface.DSDesignSpaceNumberOfCyclicalCases(ds)

def DSDesignSpaceCyclicalCaseWithCaseNumber(ds, caseNumber):
    return _dspace_interface.DSDesignSpaceCyclicalCaseWithCaseNumber(ds, caseNumber)

def DSDesignSpaceCyclicalCaseWithCaseIdentifier(ds, identifer):
    return _dspace_interface.DSDesignSpaceCyclicalCaseWithCaseIdentifier(ds, identifer)

def DSDesignSpaceCalculateCyclicalCase(ds, aCase):
    return _dspace_interface.DSDesignSpaceCalculateCyclicalCase(ds, aCase)

def DSDesignSpaceCalculateCyclicalCases(ds):
    return _dspace_interface.DSDesignSpaceCalculateCyclicalCases(ds)

def DSDesignSpaceCalculateValidityOfCases(ds):
    return _dspace_interface.DSDesignSpaceCalculateValidityOfCases(ds)

def DSDesignSpaceCalculateValidityOfCaseSet(ds, numberOfCases, cases):
    return _dspace_interface.DSDesignSpaceCalculateValidityOfCaseSet(ds, numberOfCases, cases)

def DSBlowUpSignatureForCaseNumber(caseNumber, freeDependentVariable):
    return _dspace_interface.DSBlowUpSignatureForCaseNumber(caseNumber, freeDependentVariable)

def DSCalculateUnstableCase(ds, aCase):
    return _dspace_interface.DSCalculateUnstableCase(ds, aCase)

def DSDesignSpaceCalculateUnstableCases(ds):
    return _dspace_interface.DSDesignSpaceCalculateUnstableCases(ds)

def DSDesignSpaceCalculateUnstableCase(ds, aCase):
    return _dspace_interface.DSDesignSpaceCalculateUnstableCase(ds, aCase)

def DSCaseIsCyclical(aCase):
    return _dspace_interface.DSCaseIsCyclical(aCase)

def DSDesignSpaceEncode(aCase):
    return _dspace_interface.DSDesignSpaceEncode(aCase)

def DSExtensionDataEncode(extensionData):
    return _dspace_interface.DSExtensionDataEncode(extensionData)

def DSVectorEncode(data, n):
    return _dspace_interface.DSVectorEncode(data, n)

def DSMassBalanceEncode(data):
    return _dspace_interface.DSMassBalanceEncode(data)

def DSDesignSpaceFromDesignSpaceMessage(message):
    return _dspace_interface.DSDesignSpaceFromDesignSpaceMessage(message)

def DSDesignSpaceDecode(length, buffer):
    return _dspace_interface.DSDesignSpaceDecode(length, buffer)
M_DS_VERTICES_NULL = _dspace_interface.M_DS_VERTICES_NULL

def DSVerticesAlloc(dimensions):
    return _dspace_interface.DSVerticesAlloc(dimensions)

def DSVerticesFree(vertices):
    return _dspace_interface.DSVerticesFree(vertices)

def DSVerticesAddVertex(vertices, coordinates):
    return _dspace_interface.DSVerticesAddVertex(vertices, coordinates)

def DSVerticesAreEqual(vert1, vert2):
    return _dspace_interface.DSVerticesAreEqual(vert1, vert2)

def DSVerticesVertexAtIndex(vertices, index):
    return _dspace_interface.DSVerticesVertexAtIndex(vertices, index)

def DSVerticesOrder2DVertices(vertices):
    return _dspace_interface.DSVerticesOrder2DVertices(vertices)

def DSVerticesPrint(vertices):
    return _dspace_interface.DSVerticesPrint(vertices)

def DSVerticesToMatrix(vertices):
    return _dspace_interface.DSVerticesToMatrix(vertices)

def DSVertices3DConnectivityMatrix(vertices, aCase, lower, upper, xIndex, yIndex, zIndex):
    return _dspace_interface.DSVertices3DConnectivityMatrix(vertices, aCase, lower, upper, xIndex, yIndex, zIndex)

def DSVertices3DFaces(vertices, aCase, lower, upper, xIndex, yIndex, zIndex):
    return _dspace_interface.DSVertices3DFaces(vertices, aCase, lower, upper, xIndex, yIndex, zIndex)

def DSVerticesConnectivityMatrix(vertices, aCase, lower, upper):
    return _dspace_interface.DSVerticesConnectivityMatrix(vertices, aCase, lower, upper)
M_DS_DICTIONARY_NULL = _dspace_interface.M_DS_DICTIONARY_NULL

def DSDictionaryAlloc():
    return _dspace_interface.DSDictionaryAlloc()

def DSDictionaryFree(aDictionary):
    return _dspace_interface.DSDictionaryFree(aDictionary)

def DSDictionaryFreeWithFunction(aDictionary, freeFunction):
    return _dspace_interface.DSDictionaryFreeWithFunction(aDictionary, freeFunction)

def DSDictionaryCount(aDictionary):
    return _dspace_interface.DSDictionaryCount(aDictionary)

def DSDictionaryValueForName(dictionary, name):
    return _dspace_interface.DSDictionaryValueForName(dictionary, name)

def DSDictionaryNames(aDictionary):
    return _dspace_interface.DSDictionaryNames(aDictionary)

def DSDictionaryAddValueWithName(dictionary, name, value):
    return _dspace_interface.DSDictionaryAddValueWithName(dictionary, name, value)

def DSDictionaryPrint(dictionary):
    return _dspace_interface.DSDictionaryPrint(dictionary)

def DSDictionaryPrintWithFunction(dictionary, printFunction):
    return _dspace_interface.DSDictionaryPrintWithFunction(dictionary, printFunction)

def DSDictionaryFromArray(array, size):
    return _dspace_interface.DSDictionaryFromArray(array, size)
M_DS_STACK_NULL = _dspace_interface.M_DS_STACK_NULL

def DSStackAlloc():
    return _dspace_interface.DSStackAlloc()

def DSStackFree(stack):
    return _dspace_interface.DSStackFree(stack)

def DSStackFreeWithFunction(stack, function):
    return _dspace_interface.DSStackFreeWithFunction(stack, function)

def DSStackPush(stack, object):
    return _dspace_interface.DSStackPush(stack, object)

def DSStackPop(stack):
    return _dspace_interface.DSStackPop(stack)

def DSStackObjectAtIndex(stack, index):
    return _dspace_interface.DSStackObjectAtIndex(stack, index)

def DSStackCount(stack):
    return _dspace_interface.DSStackCount(stack)
M_DS_SUBCASE_NULL = _dspace_interface.M_DS_SUBCASE_NULL

def DSCyclicalCaseForCaseInDesignSpace(ds, aCase):
    return _dspace_interface.DSCyclicalCaseForCaseInDesignSpace(ds, aCase)

def DSCyclicalCaseFree(aSubcase):
    return _dspace_interface.DSCyclicalCaseFree(aSubcase)

def DSCyclicalCaseInit3dSignature(collapsed, original, aCase):
    return _dspace_interface.DSCyclicalCaseInit3dSignature(collapsed, original, aCase)

def DSSubCaseGenerate3dSignature(ds, aCase, three_digit, location):
    return _dspace_interface.DSSubCaseGenerate3dSignature(ds, aCase, three_digit, location)

def DSCyclicalCaseXd(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseXd(cyclicalCase)

def DSCyclicalCaseXi(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseXi(cyclicalCase)

def DSCyclicalCaseMainCycleVariables(cyclicalCase, cycle):
    return _dspace_interface.DSCyclicalCaseMainCycleVariables(cyclicalCase, cycle)

def DSCyclicalCaseSecondaryCycleVariables(cyclicalCase, cycle):
    return _dspace_interface.DSCyclicalCaseSecondaryCycleVariables(cyclicalCase, cycle)

def DSCyclicalCaseInternalDesignSpace(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseInternalDesignSpace(cyclicalCase)

def DSCyclicalCaseOriginalCase(subcase):
    return _dspace_interface.DSCyclicalCaseOriginalCase(subcase)

def DSCyclicalCaseNumberOfValidSubcases(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseNumberOfValidSubcases(cyclicalCase)

def DSCyclicalCaseNumberOfCycles(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseNumberOfCycles(cyclicalCase)

def DSCyclicalCaseNumberOfValidBlowingSubcases(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseNumberOfValidBlowingSubcases(cyclicalCase)

def DSCyclicalCaseNumberOfSubcases(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseNumberOfSubcases(cyclicalCase)

def DSCyclicalCaseDSDictionaryNumberOfValidSubCasesAndValidBlowingSubcases(cyclicalCases):
    return _dspace_interface.DSCyclicalCaseDSDictionaryNumberOfValidSubCasesAndValidBlowingSubcases(cyclicalCases)

def DSCyclicalCaseSubcaseWithCaseNumber(cyclicalCase, subcaseNumber):
    return _dspace_interface.DSCyclicalCaseSubcaseWithCaseNumber(cyclicalCase, subcaseNumber)

def DSCyclicalCaseCyclicalSubcaseWithCaseNumber(cyclicalCase, subcaseNumber):
    return _dspace_interface.DSCyclicalCaseCyclicalSubcaseWithCaseNumber(cyclicalCase, subcaseNumber)

def DSCyclicalCaseNumberOfEquations(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseNumberOfEquations(cyclicalCase)

def DSCyclicalCaseEquations(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseEquations(cyclicalCase)

def DSCyclicalCaseNumberOfConditions(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseNumberOfConditions(cyclicalCase)

def DSCyclicalCaseConditions(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseConditions(cyclicalCase)

def DSCyclicalCaseLogarithmicConditions(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseLogarithmicConditions(cyclicalCase)

def DSCyclicalCaseNumberOfBoundaries(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseNumberOfBoundaries(cyclicalCase)

def DSCyclicalCaseBoundaries(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseBoundaries(cyclicalCase)

def DSCyclicalCaseLogarithmicBoundaries(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseLogarithmicBoundaries(cyclicalCase)

def DSCyclicalCaseNumber(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseNumber(cyclicalCase)

def DSCyclicalCaseIdentifier(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseIdentifier(cyclicalCase)

def DSCyclicalCaseSignature(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseSignature(cyclicalCase)

def DSCyclicalCaseSignatureToString(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseSignatureToString(cyclicalCase)

def DSCyclicalCaseSSystem(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseSSystem(cyclicalCase)

def DSCyclicalCaseIsValid(aSubcase, strict):
    return _dspace_interface.DSCyclicalCaseIsValid(aSubcase, strict)

def DSCyclicalCaseIsValidAtSlice(aSubcase, lowerBounds, upperBounds, strict):
    return _dspace_interface.DSCyclicalCaseIsValidAtSlice(aSubcase, lowerBounds, upperBounds, strict)

def DSCyclicalCaseCalculateAllValidSubcasesByResolvingCyclicalCases(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseCalculateAllValidSubcasesByResolvingCyclicalCases(cyclicalCase)

def DSDesignSpaceCalculateAllValidCasesByResolvingCyclicalCasesUnstable(ds, caseDictionary):
    return _dspace_interface.DSDesignSpaceCalculateAllValidCasesByResolvingCyclicalCasesUnstable(ds, caseDictionary)

def DSDesignSpaceCalculateAllValidCasesForSliceByResolvingCyclicalCasesUnstable(ds, caseDictionary, lower, upper, strict):
    return _dspace_interface.DSDesignSpaceCalculateAllValidCasesForSliceByResolvingCyclicalCasesUnstable(ds, caseDictionary, lower, upper, strict)

def DSCyclicalCaseCalculateAllValidSubcasesForSliceByResolvingCyclicalCases(cyclicalCase, lower, upper, strict):
    return _dspace_interface.DSCyclicalCaseCalculateAllValidSubcasesForSliceByResolvingCyclicalCases(cyclicalCase, lower, upper, strict)

def DSCyclicalCaseCalculateAllValidSubcases(cyclicalCase):
    return _dspace_interface.DSCyclicalCaseCalculateAllValidSubcases(cyclicalCase)

def DSCyclicalCaseCalculateAllValidSubcasesForSlice(cyclicalCase, lower, upper):
    return _dspace_interface.DSCyclicalCaseCalculateAllValidSubcasesForSlice(cyclicalCase, lower, upper)

def DSCyclicalCaseVerticesFor2DSlice(cyclicalCase, lowerBounds, upperBounds, xVariable, yVariable):
    return _dspace_interface.DSCyclicalCaseVerticesFor2DSlice(cyclicalCase, lowerBounds, upperBounds, xVariable, yVariable)

def DSCyclicalCaseEncode(aCase):
    return _dspace_interface.DSCyclicalCaseEncode(aCase)

def DSCyclicalCaseFromCyclicalCaseMessage(message):
    return _dspace_interface.DSCyclicalCaseFromCyclicalCaseMessage(message)

def DSCyclicalCaseDecode(length, buffer):
    return _dspace_interface.DSCyclicalCaseDecode(length, buffer)

def DSCaseNDVertexEnumeration(aCase, lowerBounds, upperBounds):
    return _dspace_interface.DSCaseNDVertexEnumeration(aCase, lowerBounds, upperBounds)

def DSCaseNDVertexEnumerationVertices(aCase, lowerBounds, upperBounds, maxNumberVertices, limitVertices, Volume):
    return _dspace_interface.DSCaseNDVertexEnumerationVertices(aCase, lowerBounds, upperBounds, maxNumberVertices, limitVertices, Volume)

def DSCaseFacetsForVertices(aCase, Vertices, maxNumberVertices, limitVertices, Volume_str):
    return _dspace_interface.DSCaseFacetsForVertices(aCase, Vertices, maxNumberVertices, limitVertices, Volume_str)

def DSCaseNDVertexEnumerationNumberOfVertices(aCase, lowerBounds, upperBounds, maxVertices, limitVertices):
    return _dspace_interface.DSCaseNDVertexEnumerationNumberOfVertices(aCase, lowerBounds, upperBounds, maxVertices, limitVertices)

def DSVolumefromArray_qhull(points, numpoints, dim):
    return _dspace_interface.DSVolumefromArray_qhull(points, numpoints, dim)

def DSPopDynamicsMutationRateForTransition(oPoint1, oPoint2, l, d, identity):
    return _dspace_interface.DSPopDynamicsMutationRateForTransition(oPoint1, oPoint2, l, d, identity)

def DSPopDynamicsGetDifferences(oPoint1, oPoint2, log_scale):
    return _dspace_interface.DSPopDynamicsGetDifferences(oPoint1, oPoint2, log_scale)

def DSPopDynamicsCalculateParametricMutationRates(Differences, identity, l, d):
    return _dspace_interface.DSPopDynamicsCalculateParametricMutationRates(Differences, identity, l, d)

def DSPopDynamicsCalculateMutationRate(BiasFactor):
    return _dspace_interface.DSPopDynamicsCalculateMutationRate(BiasFactor)
class DSExpressionArray(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    equationCount = property(_dspace_interface.DSExpressionArray_equationCount_get, _dspace_interface.DSExpressionArray_equationCount_set)
    expressionArray = property(_dspace_interface.DSExpressionArray_expressionArray_get, _dspace_interface.DSExpressionArray_expressionArray_set)

    def __init__(self):
        _dspace_interface.DSExpressionArray_swiginit(self, _dspace_interface.new_DSExpressionArray())
    __swig_destroy__ = _dspace_interface.delete_DSExpressionArray

# Register DSExpressionArray in _dspace_interface:
_dspace_interface.DSExpressionArray_swigregister(DSExpressionArray)
cvar = _dspace_interface.cvar


def DSSWIGDSCyclicalCaseEncodedBytes(aCase):
    return _dspace_interface.DSSWIGDSCyclicalCaseEncodedBytes(aCase)

def DSSWIGDSCyclicalCaseDecodeFromByteArray(byteArray):
    return _dspace_interface.DSSWIGDSCyclicalCaseDecodeFromByteArray(byteArray)

def DSSWIGDSCaseEncodedBytes(aCase):
    return _dspace_interface.DSSWIGDSCaseEncodedBytes(aCase)

def DSSWIGDSCaseDecodeFromByteArray(byteArray):
    return _dspace_interface.DSSWIGDSCaseDecodeFromByteArray(byteArray)

def DSSWIGDSDesignSpaceEncodedBytes(ds):
    return _dspace_interface.DSSWIGDSDesignSpaceEncodedBytes(ds)

def DSSWIGDSDesignSpaceDecodeFromByteArray(byteArray):
    return _dspace_interface.DSSWIGDSDesignSpaceDecodeFromByteArray(byteArray)

def DSSWIGDSDictionaryFromPyDict(pydict):
    return _dspace_interface.DSSWIGDSDictionaryFromPyDict(pydict)

def DSSWIGDSDictionaryFreeCharValues(dictionary):
    return _dspace_interface.DSSWIGDSDictionaryFreeCharValues(dictionary)

def DSSWIGVoidAsSubcase(ptr):
    return _dspace_interface.DSSWIGVoidAsSubcase(ptr)

def DSSWIGVoidAsCase(ptr):
    return _dspace_interface.DSSWIGVoidAsCase(ptr)

def DSSWIGVoidAsVertices(ptr):
    return _dspace_interface.DSSWIGVoidAsVertices(ptr)

def DSSWIGVoidAsExpression(ptr):
    return _dspace_interface.DSSWIGVoidAsExpression(ptr)

def DSSWIGPseudoCaseFromIntersectionOfCases(numberOfCases, cases):
    return _dspace_interface.DSSWIGPseudoCaseFromIntersectionOfCases(numberOfCases, cases)

def DSSWIGPseudoCaseFromIntersectionOfCasesExcludingSlice(numberOfCases, cases, numberOfExceptions, exceptionVarNames):
    return _dspace_interface.DSSWIGPseudoCaseFromIntersectionOfCasesExcludingSlice(numberOfCases, cases, numberOfExceptions, exceptionVarNames)

def DSSWIGDesignSpaceParseWrapper(strings, numberOfEquations, Xd_list, numberOfXd):
    return _dspace_interface.DSSWIGDesignSpaceParseWrapper(strings, numberOfEquations, Xd_list, numberOfXd)

def DSSWIGDesignSpaceParseWrapperWithXi(strings, numberOfEquations, Xd_list, numberOfXd, Xi_list, numberOfXi):
    return _dspace_interface.DSSWIGDesignSpaceParseWrapperWithXi(strings, numberOfEquations, Xd_list, numberOfXd, Xi_list, numberOfXi)

def DSSWIGGMASystemParseWrapper(strings, numberOfEquations, Xd_list, numberOfXd):
    return _dspace_interface.DSSWIGGMASystemParseWrapper(strings, numberOfEquations, Xd_list, numberOfXd)

def DSSWIGSSystemParseWrapper(strings, numberOfEquations, Xd_list, numberOfXd):
    return _dspace_interface.DSSWIGSSystemParseWrapper(strings, numberOfEquations, Xd_list, numberOfXd)

def DSExpressionArrayFromVoid(pointer):
    return _dspace_interface.DSExpressionArrayFromVoid(pointer)

def DSSWIGExpressionRecastSystemEquations(equations, count, prefix):
    return _dspace_interface.DSSWIGExpressionRecastSystemEquations(equations, count, prefix)

def DSSWIGExpressionArrayCount(array):
    return _dspace_interface.DSSWIGExpressionArrayCount(array)

def DSSWIGExpressionArrayExpressionAtIndex(array, index):
    return _dspace_interface.DSSWIGExpressionArrayExpressionAtIndex(array, index)

def DSExpressionAtIndexOfExpressionArray(expressions, index):
    return _dspace_interface.DSExpressionAtIndexOfExpressionArray(expressions, index)

def DSUIntegerAtIndexOfIntegerArray(array, index):
    return _dspace_interface.DSUIntegerAtIndexOfIntegerArray(array, index)

def DSCaseAtIndexOfArray(array, index):
    return _dspace_interface.DSCaseAtIndexOfArray(array, index)

def DSDictionaryKeyAtIndex(dict, index):
    return _dspace_interface.DSDictionaryKeyAtIndex(dict, index)

def DSSSystemPositiveRootsSWIG(ssys, Xi0):
    return _dspace_interface.DSSSystemPositiveRootsSWIG(ssys, Xi0)

def DSSSystemRouthArraySWIG(ssys, Xi0):
    return _dspace_interface.DSSSystemRouthArraySWIG(ssys, Xi0)

def DSSWIGPythonPostWarning(errorString):
    return _dspace_interface.DSSWIGPythonPostWarning(errorString)

def DSSWIGPythonPostError(errorString):
    return _dspace_interface.DSSWIGPythonPostError(errorString)

def DSSWIGAssignErrorFunctions():
    return _dspace_interface.DSSWIGAssignErrorFunctions()
VERSION = _dspace_interface.VERSION


